
GccApplication5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000256  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001e2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800100  00800100  00000256  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000256  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000288  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000002c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007ab  00000000  00000000  000002f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006c7  00000000  00000000  00000aa3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002b4  00000000  00000000  0000116a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000044  00000000  00000000  00001420  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003be  00000000  00000000  00001464  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000bc  00000000  00000000  00001822  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  000018de  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a8 30       	cpi	r26, 0x08	; 8
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 85 00 	call	0x10a	; 0x10a <main>
  88:	0c 94 ef 00 	jmp	0x1de	; 0x1de <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <readdistance>:

void readdistance(){
	
		int timer = 0;
	
		PIND = 0x00;
  90:	19 b8       	out	0x09, r1	; 9
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  92:	83 ef       	ldi	r24, 0xF3	; 243
  94:	91 e0       	ldi	r25, 0x01	; 1
  96:	01 97       	sbiw	r24, 0x01	; 1
  98:	f1 f7       	brne	.-4      	; 0x96 <readdistance+0x6>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <readdistance+0xc>
  9c:	00 00       	nop
		_delay_ms(2);
		PIND = 0xFF;
  9e:	8f ef       	ldi	r24, 0xFF	; 255
  a0:	89 b9       	out	0x09, r24	; 9
  a2:	83 ec       	ldi	r24, 0xC3	; 195
  a4:	99 e0       	ldi	r25, 0x09	; 9
  a6:	01 97       	sbiw	r24, 0x01	; 1
  a8:	f1 f7       	brne	.-4      	; 0xa6 <readdistance+0x16>
  aa:	00 c0       	rjmp	.+0      	; 0xac <readdistance+0x1c>
  ac:	00 00       	nop
		_delay_ms(10);
		PIND = 0x00;
  ae:	19 b8       	out	0x09, r1	; 9
		
		
		while((PIND & PINB) != PINB){
  b0:	29 b1       	in	r18, 0x09	; 9
  b2:	83 b1       	in	r24, 0x03	; 3
  b4:	93 b1       	in	r25, 0x03	; 3
  b6:	82 23       	and	r24, r18
  b8:	89 13       	cpse	r24, r25
  ba:	fa cf       	rjmp	.-12     	; 0xb0 <readdistance+0x20>
			timer = 0;
		}
		
		while((PIND & PINB) == PINB){
  bc:	29 b1       	in	r18, 0x09	; 9
  be:	83 b1       	in	r24, 0x03	; 3
  c0:	93 b1       	in	r25, 0x03	; 3
  c2:	82 23       	and	r24, r18
  c4:	89 13       	cpse	r24, r25
  c6:	0b c0       	rjmp	.+22     	; 0xde <readdistance+0x4e>
  c8:	20 e0       	ldi	r18, 0x00	; 0
  ca:	30 e0       	ldi	r19, 0x00	; 0
			timer ++;
  cc:	2f 5f       	subi	r18, 0xFF	; 255
  ce:	3f 4f       	sbci	r19, 0xFF	; 255
		
		while((PIND & PINB) != PINB){
			timer = 0;
		}
		
		while((PIND & PINB) == PINB){
  d0:	49 b1       	in	r20, 0x09	; 9
  d2:	93 b1       	in	r25, 0x03	; 3
  d4:	83 b1       	in	r24, 0x03	; 3
  d6:	94 23       	and	r25, r20
  d8:	98 17       	cp	r25, r24
  da:	c1 f3       	breq	.-16     	; 0xcc <readdistance+0x3c>
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <readdistance+0x52>
  de:	20 e0       	ldi	r18, 0x00	; 0
  e0:	30 e0       	ldi	r19, 0x00	; 0
			timer ++;
		}
		
		
		distance = timer / 180;
  e2:	c9 01       	movw	r24, r18
  e4:	64 eb       	ldi	r22, 0xB4	; 180
  e6:	70 e0       	ldi	r23, 0x00	; 0
  e8:	0e 94 c7 00 	call	0x18e	; 0x18e <__divmodhi4>
  ec:	07 2e       	mov	r0, r23
  ee:	00 0c       	add	r0, r0
  f0:	88 0b       	sbc	r24, r24
  f2:	99 0b       	sbc	r25, r25
  f4:	0e 94 8c 00 	call	0x118	; 0x118 <__floatsisf>
  f8:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
  fc:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 100:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
 104:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_edata+0x3>
 108:	08 95       	ret

0000010a <main>:
}


int main(void)
{
	readdistance();
 10a:	0e 94 48 00 	call	0x90	; 0x90 <readdistance>
}
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	08 95       	ret

00000114 <__floatunsisf>:
 114:	e8 94       	clt
 116:	09 c0       	rjmp	.+18     	; 0x12a <__floatsisf+0x12>

00000118 <__floatsisf>:
 118:	97 fb       	bst	r25, 7
 11a:	3e f4       	brtc	.+14     	; 0x12a <__floatsisf+0x12>
 11c:	90 95       	com	r25
 11e:	80 95       	com	r24
 120:	70 95       	com	r23
 122:	61 95       	neg	r22
 124:	7f 4f       	sbci	r23, 0xFF	; 255
 126:	8f 4f       	sbci	r24, 0xFF	; 255
 128:	9f 4f       	sbci	r25, 0xFF	; 255
 12a:	99 23       	and	r25, r25
 12c:	a9 f0       	breq	.+42     	; 0x158 <__floatsisf+0x40>
 12e:	f9 2f       	mov	r31, r25
 130:	96 e9       	ldi	r25, 0x96	; 150
 132:	bb 27       	eor	r27, r27
 134:	93 95       	inc	r25
 136:	f6 95       	lsr	r31
 138:	87 95       	ror	r24
 13a:	77 95       	ror	r23
 13c:	67 95       	ror	r22
 13e:	b7 95       	ror	r27
 140:	f1 11       	cpse	r31, r1
 142:	f8 cf       	rjmp	.-16     	; 0x134 <__floatsisf+0x1c>
 144:	fa f4       	brpl	.+62     	; 0x184 <__floatsisf+0x6c>
 146:	bb 0f       	add	r27, r27
 148:	11 f4       	brne	.+4      	; 0x14e <__floatsisf+0x36>
 14a:	60 ff       	sbrs	r22, 0
 14c:	1b c0       	rjmp	.+54     	; 0x184 <__floatsisf+0x6c>
 14e:	6f 5f       	subi	r22, 0xFF	; 255
 150:	7f 4f       	sbci	r23, 0xFF	; 255
 152:	8f 4f       	sbci	r24, 0xFF	; 255
 154:	9f 4f       	sbci	r25, 0xFF	; 255
 156:	16 c0       	rjmp	.+44     	; 0x184 <__floatsisf+0x6c>
 158:	88 23       	and	r24, r24
 15a:	11 f0       	breq	.+4      	; 0x160 <__floatsisf+0x48>
 15c:	96 e9       	ldi	r25, 0x96	; 150
 15e:	11 c0       	rjmp	.+34     	; 0x182 <__floatsisf+0x6a>
 160:	77 23       	and	r23, r23
 162:	21 f0       	breq	.+8      	; 0x16c <__floatsisf+0x54>
 164:	9e e8       	ldi	r25, 0x8E	; 142
 166:	87 2f       	mov	r24, r23
 168:	76 2f       	mov	r23, r22
 16a:	05 c0       	rjmp	.+10     	; 0x176 <__floatsisf+0x5e>
 16c:	66 23       	and	r22, r22
 16e:	71 f0       	breq	.+28     	; 0x18c <__floatsisf+0x74>
 170:	96 e8       	ldi	r25, 0x86	; 134
 172:	86 2f       	mov	r24, r22
 174:	70 e0       	ldi	r23, 0x00	; 0
 176:	60 e0       	ldi	r22, 0x00	; 0
 178:	2a f0       	brmi	.+10     	; 0x184 <__floatsisf+0x6c>
 17a:	9a 95       	dec	r25
 17c:	66 0f       	add	r22, r22
 17e:	77 1f       	adc	r23, r23
 180:	88 1f       	adc	r24, r24
 182:	da f7       	brpl	.-10     	; 0x17a <__floatsisf+0x62>
 184:	88 0f       	add	r24, r24
 186:	96 95       	lsr	r25
 188:	87 95       	ror	r24
 18a:	97 f9       	bld	r25, 7
 18c:	08 95       	ret

0000018e <__divmodhi4>:
 18e:	97 fb       	bst	r25, 7
 190:	07 2e       	mov	r0, r23
 192:	16 f4       	brtc	.+4      	; 0x198 <__divmodhi4+0xa>
 194:	00 94       	com	r0
 196:	07 d0       	rcall	.+14     	; 0x1a6 <__divmodhi4_neg1>
 198:	77 fd       	sbrc	r23, 7
 19a:	09 d0       	rcall	.+18     	; 0x1ae <__divmodhi4_neg2>
 19c:	0e 94 db 00 	call	0x1b6	; 0x1b6 <__udivmodhi4>
 1a0:	07 fc       	sbrc	r0, 7
 1a2:	05 d0       	rcall	.+10     	; 0x1ae <__divmodhi4_neg2>
 1a4:	3e f4       	brtc	.+14     	; 0x1b4 <__divmodhi4_exit>

000001a6 <__divmodhi4_neg1>:
 1a6:	90 95       	com	r25
 1a8:	81 95       	neg	r24
 1aa:	9f 4f       	sbci	r25, 0xFF	; 255
 1ac:	08 95       	ret

000001ae <__divmodhi4_neg2>:
 1ae:	70 95       	com	r23
 1b0:	61 95       	neg	r22
 1b2:	7f 4f       	sbci	r23, 0xFF	; 255

000001b4 <__divmodhi4_exit>:
 1b4:	08 95       	ret

000001b6 <__udivmodhi4>:
 1b6:	aa 1b       	sub	r26, r26
 1b8:	bb 1b       	sub	r27, r27
 1ba:	51 e1       	ldi	r21, 0x11	; 17
 1bc:	07 c0       	rjmp	.+14     	; 0x1cc <__udivmodhi4_ep>

000001be <__udivmodhi4_loop>:
 1be:	aa 1f       	adc	r26, r26
 1c0:	bb 1f       	adc	r27, r27
 1c2:	a6 17       	cp	r26, r22
 1c4:	b7 07       	cpc	r27, r23
 1c6:	10 f0       	brcs	.+4      	; 0x1cc <__udivmodhi4_ep>
 1c8:	a6 1b       	sub	r26, r22
 1ca:	b7 0b       	sbc	r27, r23

000001cc <__udivmodhi4_ep>:
 1cc:	88 1f       	adc	r24, r24
 1ce:	99 1f       	adc	r25, r25
 1d0:	5a 95       	dec	r21
 1d2:	a9 f7       	brne	.-22     	; 0x1be <__udivmodhi4_loop>
 1d4:	80 95       	com	r24
 1d6:	90 95       	com	r25
 1d8:	bc 01       	movw	r22, r24
 1da:	cd 01       	movw	r24, r26
 1dc:	08 95       	ret

000001de <_exit>:
 1de:	f8 94       	cli

000001e0 <__stop_program>:
 1e0:	ff cf       	rjmp	.-2      	; 0x1e0 <__stop_program>
